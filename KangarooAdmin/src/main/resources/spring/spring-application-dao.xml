<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <bean id="config"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:properties/datasource.properties</value>
                <value>classpath:properties/hibernate.properties</value>
            </list>
        </property>
    </bean>

    <!-- 配置数据源 -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${master.url}"/>
        <property name="driverClassName" value="${master.driverClassName}"/>
        <property name="username" value="${master.username}"/>
        <property name="password" value="${master.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${master.initialSize}"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="${master.maxActive}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${master.minIdle}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${master.maxWait}"/>
        <property name="poolPreparedStatements" value="${master.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${master.maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="validationQuery" value="${master.validationQuery}"/>
        <property name="testOnBorrow" value="${master.testOnBorrow}"/>
        <property name="testOnReturn" value="${master.testOnReturn}"/>
        <property name="testWhileIdle" value="${master.testWhileIdle}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${master.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${master.minEvictableIdleTimeMillis}"/>
        <property name="maxOpenPreparedStatements" value="${master.maxOpenPreparedStatements}"/>
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="${master.removeAbandoned}"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="${master.removeAbandonedTimeout}"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="${master.logAbandoned}"/>
        <!-- 监控数据库 -->
        <property name="filters" value="${master.filters}"/>
    </bean>

    <!-- 配置hibernate session工厂 master -->
    <bean id="masterSessionFactory" class="com.baomidou.hibernateplus.HibernateSpringSessionFactoryBean">
        <property name="type" value="master"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <!--<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
            </props>
        </property>

        <!-- 自动扫描注解方式配置的hibernate类文件 -->
        <property name="packagesToScan">
            <list>
                <value>com.baomidou.hibernate.po</value>
            </list>
        </property>

    </bean>
	
</beans>